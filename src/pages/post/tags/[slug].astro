---
import Base from "@layouts/Base.astro";
import PageBanner from "@components/Banner/PageBanner.astro";
import CardGallery from "@components/Card/CardGallery.astro";
import PostCard from "@components/Card/PostCard.astro";
import { queryFetch } from "@utils/queryFetch";
const { categoryName } = Astro.props;
const title = `搜尋文章標籤：${categoryName}`;
const description = `搜尋文章標籤`;

  const filtedPosts = await queryFetch(`query Tag ($targetTag: String!){
  posts( pagination: {limit: 9999} filters: {tags:{name:{eq:$targetTag}}}){
    data {
      attributes {
        themeColor
        featuredIcon {
          data {
            attributes {
              url
              width
              height
            }
          }
        }
        slug
        date
        titletc
        excerpt
        tags{
          data{
            attributes{
              name
              slug
            }
          }
        }
        category{
          data{
            attributes{
              name
              slug
            }
          }
        }
        content
      }
    }
  }
}
`, `{"targetTag": "${categoryName}"}`).then((result) => result.data.posts.data);


export async function getStaticPaths() {
  const tags = await queryFetch(`{
	tags{
    data{
      attributes{
        name
        slug
      }
    }
  }
}
`).then((result) => result.data.tags.data);

  return tags.map((tag) => {
    return {
      params: { slug: tag.attributes.slug },
      props: {
        categoryName: tag.attributes.name,
      },
    };
  });
}
---

<Base title={title} description={description}>
  <PageBanner title={title} />
  <section class="px-4">
    <CardGallery>
      {
        filtedPosts.map((post) => {
          return <PostCard post={post.attributes} />;
        })
      }
    </CardGallery>
  </section>
</Base>
