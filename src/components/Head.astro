---
import "@styles/global.css";
import { queryFetch } from "@utils/queryFetch";
const cloudConfig = await queryFetch(`{
  siteConfig{
    data{
      attributes{
        global
      }
    }
  }
}`).then((result) => result.data.siteConfig.data.attributes.global);

export interface Props {
  image?: string;
}

const { title, description, emoji } = Astro.props;
const SeoTitle = (title || cloudConfig.brand.slogan) + ` - ${cloudConfig.brand.eng}`;
const SeoDescription = description || cloudConfig.brand.description;
const SeoEmoji = emoji || cloudConfig.brand.emoji
const SeoImage = "/images/placeholder/placeholder-og.jpg";

---

<!-- Global Metadata -->
<meta charset="utf-8" />
<meta name="viewport" content="width=device-width,initial-scale=1" />

<link rel="icon" href=`data:image/svg+xml,<svg xmlns=%22http://www.w3.org/2000/svg%22 viewBox=%220 0 100 100%22><text y=%22.9em%22 font-size=%2290%22>${SeoEmoji}</text></svg>`/>
<meta name="generator" content={Astro.generator} />

<!-- Primary Meta Tags -->
<title>{SeoTitle}</title>
<meta name="title" content={SeoTitle} />
<meta name="description" content={SeoDescription} />

<!-- Open Graph / Facebook -->
<meta property="og:type" content="website" />
<meta property="og:url" content={Astro.url} />
<meta property="og:title" content={SeoTitle} />
<meta property="og:description" content={SeoDescription} />
<meta property="og:image" content={new URL(SeoImage, Astro.url)} />

<!-- Twitter -->
<meta property="twitter:card" content="summary_large_image" />
<meta property="twitter:url" content={Astro.url} />
<meta property="twitter:title" content={SeoTitle} />
<meta property="twitter:description" content={SeoDescription} />
<meta property="twitter:image" content={new URL(SeoImage, Astro.url)} />

<script is:inline>
  // On page load or when changing themes, best to add inline in `head` to avoid FOUC
  if (
    localStorage.getItem("color-theme") === "dark" ||
    (!("color-theme" in localStorage) &&
      window.matchMedia("(prefers-color-scheme: dark)").matches)
  ) {
    document.documentElement.classList.add("dark");
  } else {
    document.documentElement.classList.remove("dark");
  }
</script>
