---
import "@styles/global.css";
import { SITE_BRAND, SITE_SLOGAN, SITE_DESCRIPTION } from "@config";

export interface Props {
  image?: string;
}

const { title, description } = Astro.props;
const SeoTitle = (title || SITE_SLOGAN) + ` - ${SITE_BRAND}`;
const SeoDescription = description || SITE_DESCRIPTION;
const image = "/placeholder-social.jpg";
---

<!-- Global Metadata -->
<meta charset="utf-8" />
<meta name="viewport" content="width=device-width,initial-scale=1" />
<link rel="icon" type="image/svg+xml" href="/favicon.svg" />
<meta name="generator" content={Astro.generator} />

<!-- Primary Meta Tags -->
<title>{SeoTitle}</title>
<meta name="title" content={SeoTitle} />
<meta name="description" content={SeoDescription} />

<!-- Open Graph / Facebook -->
<meta property="og:type" content="website" />
<meta property="og:url" content={Astro.url} />
<meta property="og:title" content={SeoTitle} />
<meta property="og:description" content={SeoDescription} />
<meta property="og:image" content={new URL(image, Astro.url)} />

<!-- Twitter -->
<meta property="twitter:card" content="summary_large_image" />
<meta property="twitter:url" content={Astro.url} />
<meta property="twitter:title" content={SeoTitle} />
<meta property="twitter:description" content={SeoDescription} />
<meta property="twitter:image" content={new URL(image, Astro.url)} />

<script>
  // On page load or when changing themes, best to add inline in `head` to avoid FOUC
  if (
    localStorage.getItem("color-theme") === "dark" ||
    (!("color-theme" in localStorage) &&
      window.matchMedia("(prefers-color-scheme: dark)").matches)
  ) {
    document.documentElement.classList.add("dark");
  } else {
    document.documentElement.classList.remove("dark");
  }
</script>
