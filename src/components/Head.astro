---
import "@styles/global.css";
import { queryFetch } from "@utils/queryFetch";
const cloudConfig = await queryFetch(`{
  siteConfig{
    data{
      attributes{
        global
      }
    }
  }
}`).then((result) => result.data.siteConfig.data.attributes.global);
// Prop Data
const { title, description, image } = Astro.props;
const SeoTitle = `${title || cloudConfig.brand.slogan} - ${cloudConfig.brand.eng}`
const SeoDescription = description || cloudConfig.brand.description;
const SeoImage = image;
---

<!-- Global -->
<meta charset="utf-8" />
<meta name="viewport" content="width=device-width,initial-scale=1" />
<meta name="generator" content={Astro.generator} />

<!-- SEO Meta -->
<title>{SeoTitle}</title>
<meta name="title" content={SeoTitle} />
<meta name="description" content={SeoDescription} />

<!-- Open Graph / Facebook -->
<meta property="og:url" content={Astro.url.origin} />
<meta property="og:locale" content="zh_TW">
<meta property="og:type" content="website" />
<meta property="og:title" content={SeoTitle} />
<meta property="og:description" content={SeoDescription} />
<meta property="og:image" content={SeoImage ? SeoImage.attributes.url : new URL("/images/placeholder/webdongOg.jpg", Astro.url)}/>
<meta property="og:image:alt" content={SeoImage ? SeoImage.attributes.alternativeText : "預設 og 圖片"}>
 {
  SeoImage ?
    <meta property="og:image:width" content={SeoImage.attributes.width}>
    <meta property="og:image:height" content={SeoImage.attributes.height}>
    :
    ""
 }
 
<!-- Twitter -->
<meta property="twitter:card" content="summary_large_image" />
<meta property="twitter:domain" content={Astro.url.origin} />
<meta property="twitter:title" content={SeoTitle} />
<meta property="twitter:description" content={SeoDescription} />
<meta property="og:image" content={SeoImage ? SeoImage.attributes.url : new URL("/images/placeholder/placeholder-og.jpg", Astro.url)}/>

<script is:inline>
  // On page load or when changing themes, best to add inline in `head` to avoid FOUC
  if (
    localStorage.getItem("color-theme") === "dark" ||
    (!("color-theme" in localStorage) &&
      window.matchMedia("(prefers-color-scheme: dark)").matches)
  ) {
    document.documentElement.classList.add("dark");
  } else {
    document.documentElement.classList.remove("dark");
  }
</script>

<!-- Google tag (gtag.js) -->
<script async src="https://www.googletagmanager.com/gtag/js?id=G-6JRLZJ1PCE"></script>
<script>
  window.dataLayer = window.dataLayer || [];
  function gtag(){dataLayer.push(arguments);}
  gtag('js', new Date());

  gtag('config', 'G-6JRLZJ1PCE');
</script>
